# Railway Service Configuration for Auto-Scaling Celery Worker
# Create a separate Railway service with this configuration

[build]
builder = "dockerfile"
dockerfilePath = "Dockerfile"

[deploy]
startCommand = "./deployment/scripts/start-worker.sh"
restartPolicyType = "always"
healthcheckTimeout = 300

# Alternative start commands (all now use the same simplified script):
# startCommand = "./deployment/scripts/start-worker.sh"  # Simplified working script (recommended)
# startCommand = "./start-railway-worker.sh"             # Duplicate of above (same content)
# startCommand = "python3 -m celery -A app.workers.celery_app worker --loglevel=info --concurrency=8 --queues=high_priority,medium_priority,low_priority"  # Direct command

# AUTO-SCALING CONFIGURATION
[environments.production]
variables = { 
  DEBUG = "false",
  PYTHONUNBUFFERED = "1",
  PYTHONPATH = "/app",
  CELERY_BROKER_URL = "$REDIS_URL",
  CELERY_RESULT_BACKEND = "$REDIS_URL",
  DATABASE_URL = "$DATABASE_URL",
  
  # AUTO-SCALING ENVIRONMENT VARIABLES
  AUTO_SCALING_ENABLED = "true",
  MAX_WORKER_INSTANCES = "8",
  MIN_WORKER_INSTANCES = "2", 
  SCALE_UP_THRESHOLD = "100",
  SCALE_DOWN_THRESHOLD = "20",
  WORKER_CONCURRENCY = "8",
  
  # RAILWAY SPECIFIC AUTO-SCALING
  RAILWAY_SERVICE_NAME = "workers",
  RAILWAY_PROJECT_ID = "$RAILWAY_PROJECT_ID",
  RAILWAY_TOKEN = "$RAILWAY_TOKEN"
}