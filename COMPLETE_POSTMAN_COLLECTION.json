{
  "info": {
    "name": "üè¶ Financial Risk API - Complete Collection",
    "description": "Complete API collection for Financial Default Risk Prediction System v2.0.0\n\n## üéØ API Sections (5 main sections)\n\n### 1. üîê USER AUTHENTICATION\n- User self-service authentication\n- Organization joining with tokens\n\n### 2. üë®‚Äçüíº ADMIN AUTHENTICATION  \n- Super admin operations\n- User management by admins\n\n### 3. üéØ TENANT ADMIN MANAGEMENT\n- Atomic tenant + admin creation\n- User assignment to organizations\n\n### 4. üè¢ TENANT MANAGEMENT\n- Full tenant CRUD operations\n- Tenant statistics and admin management\n\n### 5. üèõÔ∏è ORGANIZATION MANAGEMENT\n- Organization CRUD within tenants\n- Join token management\n- Whitelist management\n\n### 6. üë• USER MANAGEMENT\n- Profile management\n- Admin user operations",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "tenant_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "organization_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê USER AUTHENTICATION",
      "item": [
        {
          "name": "1. User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePass123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"username\": \"johndoe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user account"
          }
        },
        {
          "name": "2. User Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login and get access token"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('Access token saved:', response.access_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "3. Join Organization (Self-Join)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"join_token\": \"ORG_JOIN_TOKEN_HERE\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/join",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "join"]
            },
            "description": "Join an organization using a join token (user self-service)"
          }
        },
        {
          "name": "4. Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "refresh"]
            },
            "description": "Refresh access token"
          }
        },
        {
          "name": "5. User Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout"]
            },
            "description": "Logout user and invalidate token"
          }
        }
      ],
      "description": "User authentication endpoints - public access and user self-service"
    },
    {
      "name": "üë®‚Äçüíº ADMIN AUTHENTICATION",
      "item": [
        {
          "name": "1. Super Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"superadmin@system.com\",\n  \"password\": \"SuperAdminPass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login as Super Admin"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('Super Admin token saved:', response.access_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2. Admin Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin-created@example.com\",\n  \"password\": \"AdminPass123\",\n  \"first_name\": \"Admin\",\n  \"last_name\": \"Created\",\n  \"username\": \"admincreated\",\n  \"global_role\": \"user\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/create-user",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "create-user"]
            },
            "description": "Admin creates a new user (Super Admin only)"
          }
        },
        {
          "name": "3. Admin Impersonate User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/impersonate/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "impersonate", "{{user_id}}"]
            },
            "description": "Admin impersonate a user (Super Admin only)"
          }
        },
        {
          "name": "4. Admin Force Password Reset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"new_password\": \"NewSecurePass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/force-password-reset/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "force-password-reset", "{{user_id}}"]
            },
            "description": "Admin force password reset for user (Super Admin only)"
          }
        },
        {
          "name": "5. Admin Get Login History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/audit/login-history/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "audit", "login-history", "{{user_id}}"]
            },
            "description": "Get user login history (Super Admin only)"
          }
        },
        {
          "name": "6. Admin Bulk Activate Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_ids\": [\"user-id-1\", \"user-id-2\", \"user-id-3\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/bulk-activate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "bulk-activate"]
            },
            "description": "Bulk activate multiple users (Super Admin only)"
          }
        }
      ],
      "description": "Admin authentication and management endpoints - Super Admin only"
    },
    {
      "name": "üéØ TENANT ADMIN MANAGEMENT",
      "item": [
        {
          "name": "1. ‚≠ê Create Tenant with Admin (Atomic)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tenant_name\": \"HDFC Bank\",\n  \"tenant_description\": \"HDFC Bank Financial Services\",\n  \"tenant_domain\": \"hdfc.com\",\n  \"admin_email\": \"admin@hdfc.com\",\n  \"admin_password\": \"HdfcAdmin123\",\n  \"admin_first_name\": \"HDFC\",\n  \"admin_last_name\": \"Administrator\",\n  \"admin_username\": \"hdfcadmin\",\n  \"create_default_org\": true,\n  \"default_org_name\": \"HDFC Corporate Banking\",\n  \"default_org_description\": \"Main HDFC Banking Operations\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/create-tenant-with-admin",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "create-tenant-with-admin"]
            },
            "description": "Create tenant and admin user atomically (Super Admin only)"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('tenant_id', response.tenant_id);",
                  "    pm.collectionVariables.set('organization_id', response.default_organization?.organization_id || '');",
                  "    console.log('Tenant ID saved:', response.tenant_id);",
                  "    console.log('Organization ID saved:', response.default_organization?.organization_id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2. ‚≠ê Assign Existing User as Tenant Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_email\": \"admin@hdfc.com\",\n  \"tenant_id\": \"{{tenant_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/assign-existing-user",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "assign-existing-user"]
            },
            "description": "Assign existing user as tenant admin (Super Admin only)"
          }
        },
        {
          "name": "3. ‚≠ê Assign User to Organization",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_email\": \"member@hdfc.com\",\n  \"organization_id\": \"{{organization_id}}\",\n  \"role\": \"member\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/assign-user-to-organization",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "assign-user-to-organization"]
            },
            "description": "Directly assign any user to any organization with role (Super Admin only)\n\nRoles: member, org_admin"
          }
        },
        {
          "name": "4. Get Tenant Admin Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/tenant/{{tenant_id}}/admin-info",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "tenant", "{{tenant_id}}", "admin-info"]
            },
            "description": "Get tenant admin information (Super Admin only)"
          }
        },
        {
          "name": "5. Remove Tenant Admin Role",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/remove-tenant-admin/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "remove-tenant-admin", "{{user_id}}"]
            },
            "description": "Remove tenant admin role from user (Super Admin only)"
          }
        }
      ],
      "description": "Tenant admin management - Super Admin only operations for tenant setup"
    },
    {
      "name": "üè¢ TENANT MANAGEMENT",
      "item": [
        {
          "name": "1. List All Tenants",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants"]
            },
            "description": "Get all tenants (Super Admin only)"
          }
        },
        {
          "name": "2. Create Tenant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"ICICI Bank\",\n  \"description\": \"ICICI Bank Financial Services\",\n  \"domain\": \"icici.com\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenants",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants"]
            },
            "description": "Create a new tenant (Super Admin only)"
          }
        },
        {
          "name": "3. Get Tenant Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}"]
            },
            "description": "Get specific tenant details (Super Admin only)"
          }
        },
        {
          "name": "4. Update Tenant",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"HDFC Bank Updated\",\n  \"description\": \"HDFC Bank - Updated Description\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}"]
            },
            "description": "Update tenant information (Super Admin only)"
          }
        },
        {
          "name": "5. Delete Tenant",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}"]
            },
            "description": "Delete tenant (Super Admin only)"
          }
        },
        {
          "name": "6. Get Tenant Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}", "stats"]
            },
            "description": "Get tenant usage statistics (Super Admin only)"
          }
        },
        {
          "name": "7. Get Tenant Admins",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}/admins",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}", "admins"]
            },
            "description": "Get all admins for a tenant (Super Admin only)"
          }
        }
      ],
      "description": "Tenant management endpoints - Super Admin only operations"
    },
    {
      "name": "üèõÔ∏è ORGANIZATION MANAGEMENT",
      "item": [
        {
          "name": "1. List Organizations",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "List organizations (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "2. Create Organization",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"HDFC Retail Banking\",\n  \"description\": \"Retail Banking Division of HDFC\",\n  \"max_users\": 100,\n  \"join_enabled\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/organizations",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations"]
            },
            "description": "Create new organization (Tenant Admin + Org Admin)"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('organization_id', response.id);",
                  "    console.log('Organization ID saved:', response.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "3. Get Organization Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}"]
            },
            "description": "Get organization details (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "4. Update Organization",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"HDFC Retail Banking - Updated\",\n  \"description\": \"Updated description for retail banking\",\n  \"max_users\": 150,\n  \"join_enabled\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}"]
            },
            "description": "Update organization (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "5. Delete Organization",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}"]
            },
            "description": "Delete organization (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "6. Regenerate Join Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}/regenerate-token",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}", "regenerate-token"]
            },
            "description": "Regenerate organization join token (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "7. Get Organization Whitelist",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}/whitelist",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}", "whitelist"]
            },
            "description": "Get organization email whitelist (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "8. Add to Whitelist",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"employee@hdfc.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}/whitelist",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}", "whitelist"]
            },
            "description": "Add email to organization whitelist (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "9. Remove from Whitelist",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}/whitelist/employee@hdfc.com",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}", "whitelist", "employee@hdfc.com"]
            },
            "description": "Remove email from whitelist (Tenant Admin + Org Admin)"
          }
        },
        {
          "name": "10. Get Organization Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/organizations/{{organization_id}}/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "organizations", "{{organization_id}}", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get organization users (Tenant Admin + Org Admin)"
          }
        }
      ],
      "description": "Organization management endpoints - Tenant Admin and Org Admin access"
    },
    {
      "name": "üë• USER MANAGEMENT",
      "item": [
        {
          "name": "üîπ SELF-SERVICE",
          "item": [
            {
              "name": "1. Get My Profile",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/users/profile",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "profile"]
                },
                "description": "Get current user profile (Any authenticated user)"
              }
            },
            {
              "name": "2. Update My Profile",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"first_name\": \"Updated\",\n  \"last_name\": \"Name\",\n  \"username\": \"updatedusername\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/users/profile",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "profile"]
                },
                "description": "Update current user profile (Any authenticated user)"
              }
            }
          ],
          "description": "Self-service user operations"
        },
        {
          "name": "üîπ ADMIN OPERATIONS",
          "item": [
            {
              "name": "3. List Users (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/users?page=1&limit=10&role=member",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users"],
                  "query": [
                    {
                      "key": "page",
                      "value": "1"
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    },
                    {
                      "key": "role",
                      "value": "member"
                    }
                  ]
                },
                "description": "List users with role-based scoping (Admin roles)"
              }
            },
            {
              "name": "4. Create User (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"newuser@hdfc.com\",\n  \"password\": \"NewUserPass123\",\n  \"first_name\": \"New\",\n  \"last_name\": \"User\",\n  \"username\": \"newuser\",\n  \"global_role\": \"member\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/users",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users"]
                },
                "description": "Create new user (Admin roles)"
              },
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    pm.collectionVariables.set('user_id', response.id);",
                      "    console.log('User ID saved:', response.id);",
                      "}"
                    ],
                    "type": "text/javascript"
                  }
                }
              ]
            },
            {
              "name": "5. Get User Details (Admin)",
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/users/{{user_id}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "{{user_id}}"]
                },
                "description": "Get user details (Admin roles)"
              }
            },
            {
              "name": "6. Update User (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"first_name\": \"Updated\",\n  \"last_name\": \"User\",\n  \"username\": \"updateduser\",\n  \"is_active\": true\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/users/{{user_id}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "{{user_id}}"]
                },
                "description": "Update user information (Admin roles)"
              }
            },
            {
              "name": "7. Delete User (Admin)",
              "request": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/users/{{user_id}}",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "{{user_id}}"]
                },
                "description": "Delete user (Admin roles)"
              }
            },
            {
              "name": "8. Update User Role (Admin)",
              "request": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"role\": \"org_admin\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/v1/users/{{user_id}}/role",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "{{user_id}}", "role"]
                },
                "description": "Update user role (Admin roles)\n\nValid roles: member, org_admin"
              }
            },
            {
              "name": "9. Activate User (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/users/{{user_id}}/activate",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "{{user_id}}", "activate"]
                },
                "description": "Activate user account (Admin roles)"
              }
            },
            {
              "name": "10. Deactivate User (Admin)",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{access_token}}"
                  }
                ],
                "url": {
                  "raw": "{{base_url}}/api/v1/users/{{user_id}}/deactivate",
                  "host": ["{{base_url}}"],
                  "path": ["api", "v1", "users", "{{user_id}}", "deactivate"]
                },
                "description": "Deactivate user account (Admin roles)"
              }
            }
          ],
          "description": "Admin user management operations"
        }
      ],
      "description": "User management endpoints - Self-service and admin operations"
    },
    {
      "name": "üìã API INFO",
      "item": [
        {
          "name": "API Root - Service Info",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/",
              "host": ["{{base_url}}"],
              "path": [""]
            },
            "description": "Get API service information and structure"
          }
        },
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Health check endpoint for monitoring"
          }
        },
        {
          "name": "API Documentation",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{base_url}}/docs",
              "host": ["{{base_url}}"],
              "path": ["docs"]
            },
            "description": "Interactive API documentation (FastAPI Swagger UI)"
          }
        }
      ],
      "description": "API information and health endpoints"
    }
  ]
}
