{
  "info": {
    "name": "üè¶ Financial Risk API - Complete Collection (Part 1)",
    "description": "Complete API collection for Financial Default Risk Prediction System v2.0.0\n\n## üéØ Current 5-Role System\n\n### Role Hierarchy:\n1. **super_admin** - Full system access, can manage everything\n2. **tenant_admin** - Attached to 1 tenant, can manage multiple orgs within that tenant\n3. **org_admin** - Attached to 1 organization, can manage users in that org\n4. **org_member** - Attached to 1 organization, can access org resources and create predictions\n5. **user** - No organization attachment, limited access\n\n## üìã Part 1 Sections:\n\n### 1. üîê USER AUTHENTICATION\n- User self-service authentication\n- Organization joining with tokens\n\n### 2. üë®‚Äçüíº ADMIN AUTHENTICATION  \n- Super admin operations\n- User management by admins\n\n### 3. üéØ TENANT ADMIN MANAGEMENT\n- Atomic tenant + admin creation\n- User assignment to organizations\n\n### 4. üè¢ TENANT MANAGEMENT\n- Full tenant CRUD operations\n- Tenant statistics and admin management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "tenant_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "organization_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "company_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "prediction_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê USER AUTHENTICATION",
      "item": [
        {
          "name": "1. User Registration",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePass123\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Doe\",\n  \"username\": \"johndoe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            },
            "description": "Register a new user account (Creates user with role='user')"
          }
        },
        {
          "name": "2. User Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login and get access token"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('Access token saved:', response.access_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "3. Join Organization (Self-Join)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"join_token\": \"ORG_JOIN_TOKEN_HERE\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/join",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "join"]
            },
            "description": "Join an organization using a join token (user becomes org_member)"
          }
        },
        {
          "name": "4. Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "refresh"]
            },
            "description": "Refresh access token"
          }
        },
        {
          "name": "5. User Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "logout"]
            },
            "description": "Logout user and invalidate token"
          }
        }
      ],
      "description": "User authentication endpoints - public access and user self-service"
    },
    {
      "name": "üë®‚Äçüíº ADMIN AUTHENTICATION",
      "item": [
        {
          "name": "1. Super Admin Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"superadmin@system.com\",\n  \"password\": \"SuperAdminPass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login as Super Admin (role='super_admin')"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('access_token', response.access_token);",
                  "    console.log('Super Admin token saved:', response.access_token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2. Admin Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin-created@example.com\",\n  \"password\": \"AdminPass123\",\n  \"first_name\": \"Admin\",\n  \"last_name\": \"Created\",\n  \"username\": \"admincreated\",\n  \"role\": \"org_member\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/create-user",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "create-user"]
            },
            "description": "Admin creates a new user (Any admin role)\n\nAvailable roles:\n- user: Basic user\n- org_member: Organization member\n- org_admin: Organization admin\n- tenant_admin: Tenant admin (super_admin only)\n- super_admin: Super admin (super_admin only)"
          }
        },
        {
          "name": "3. Admin Impersonate User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/impersonate/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "impersonate", "{{user_id}}"]
            },
            "description": "Admin impersonate a user (Super Admin only)"
          }
        },
        {
          "name": "4. Admin Force Password Reset",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"new_password\": \"NewSecurePass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/force-password-reset/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "force-password-reset", "{{user_id}}"]
            },
            "description": "Admin force password reset for user (Super Admin only)"
          }
        },
        {
          "name": "5. Admin Get Login History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/audit/login-history/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "audit", "login-history", "{{user_id}}"]
            },
            "description": "Get user login history (Super Admin only)"
          }
        },
        {
          "name": "6. Admin Bulk Activate Users",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_ids\": [\"user-id-1\", \"user-id-2\", \"user-id-3\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/admin/bulk-activate",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "admin", "bulk-activate"]
            },
            "description": "Bulk activate multiple users (Super Admin only)"
          }
        }
      ],
      "description": "Admin authentication and management endpoints - Admin roles required"
    },
    {
      "name": "üéØ TENANT ADMIN MANAGEMENT",
      "item": [
        {
          "name": "1. ‚≠ê Create Tenant with Admin (Atomic)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tenant_name\": \"HDFC Bank\",\n  \"tenant_description\": \"HDFC Bank Financial Services\",\n  \"tenant_domain\": \"hdfc.com\",\n  \"admin_email\": \"admin@hdfc.com\",\n  \"admin_password\": \"HdfcAdmin123\",\n  \"admin_first_name\": \"HDFC\",\n  \"admin_last_name\": \"Administrator\",\n  \"admin_username\": \"hdfcadmin\",\n  \"create_default_org\": true,\n  \"default_org_name\": \"HDFC Corporate Banking\",\n  \"default_org_description\": \"Main HDFC Banking Operations\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/create-tenant-with-admin",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "create-tenant-with-admin"]
            },
            "description": "Create tenant and admin user atomically (Super Admin only)\n\nCreates:\n- New tenant\n- Admin user with role='tenant_admin'\n- Optional default organization with admin as org_admin"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('tenant_id', response.tenant_id);",
                  "    pm.collectionVariables.set('organization_id', response.default_organization?.organization_id || '');",
                  "    console.log('Tenant ID saved:', response.tenant_id);",
                  "    console.log('Organization ID saved:', response.default_organization?.organization_id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "2. ‚≠ê Assign Existing User as Tenant Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_email\": \"admin@hdfc.com\",\n  \"tenant_id\": \"{{tenant_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/assign-existing-user",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "assign-existing-user"]
            },
            "description": "Assign existing user as tenant admin (Super Admin only)\n\nChanges user role to 'tenant_admin'"
          }
        },
        {
          "name": "3. ‚≠ê Assign User to Organization",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_email\": \"member@hdfc.com\",\n  \"organization_id\": \"{{organization_id}}\",\n  \"role\": \"org_member\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/assign-user-to-organization",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "assign-user-to-organization"]
            },
            "description": "Directly assign any user to any organization with role (Super Admin only)\n\nRoles:\n- org_member: Organization member\n- org_admin: Organization administrator"
          }
        },
        {
          "name": "4. Get Tenant Admin Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/tenant/{{tenant_id}}/admin-info",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "tenant", "{{tenant_id}}", "admin-info"]
            },
            "description": "Get tenant admin information (Super Admin only)"
          }
        },
        {
          "name": "5. Remove Tenant Admin Role",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenant-admin/remove-tenant-admin/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenant-admin", "remove-tenant-admin", "{{user_id}}"]
            },
            "description": "Remove tenant admin role from user (Super Admin only)\n\nChanges role back to 'user'"
          }
        }
      ],
      "description": "Tenant admin management - Super Admin only operations for tenant setup"
    },
    {
      "name": "üè¢ TENANT MANAGEMENT",
      "item": [
        {
          "name": "1. List All Tenants",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants"]
            },
            "description": "Get all tenants (Tenant Admin or above)\n\nAccess:\n- super_admin: See all tenants\n- tenant_admin: See only their tenant"
          }
        },
        {
          "name": "2. Create Tenant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"ICICI Bank\",\n  \"description\": \"ICICI Bank Financial Services\",\n  \"domain\": \"icici.com\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenants",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants"]
            },
            "description": "Create a new tenant (Super Admin only)"
          }
        },
        {
          "name": "3. Get Tenant Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}"]
            },
            "description": "Get specific tenant details (Tenant Admin or above)"
          }
        },
        {
          "name": "4. Update Tenant",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"HDFC Bank Updated\",\n  \"description\": \"HDFC Bank - Updated Description\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}"]
            },
            "description": "Update tenant information (Super Admin only)"
          }
        },
        {
          "name": "5. Delete Tenant",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}"]
            },
            "description": "Delete tenant (Super Admin only)"
          }
        },
        {
          "name": "6. Get Tenant Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}/stats",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}", "stats"]
            },
            "description": "Get tenant usage statistics (Tenant Admin or above)"
          }
        },
        {
          "name": "7. Get Tenant Admins",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/tenants/{{tenant_id}}/admins",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "tenants", "{{tenant_id}}", "admins"]
            },
            "description": "Get all admins for a tenant (Super Admin only)"
          }
        }
      ],
      "description": "Tenant management endpoints - Super Admin and Tenant Admin operations"
    }
  ]
}
