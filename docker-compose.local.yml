version: '3.8'

services:
  # PostgreSQL Database for Local Development
  postgres:
    image: postgres:15-alpine
    container_name: default-rate-postgres
    environment:
      POSTGRES_DB: default_rate_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for Local Development
  redis:
    image: redis:7-alpine
    container_name: default-rate-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: default-rate-api
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/default_rate_db
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - CORS_ORIGIN=http://localhost:3000
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker for Background Jobs
  worker:
    build:
      context: .
      dockerfile: Dockerfile.local
    container_name: default-rate-worker
    command: ./scripts/start-local-worker.sh
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://postgres:postgres123@postgres:5432/default_rate_db
      - REDIS_URL=redis://redis:6379/0
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
    volumes:
      - ./src:/app/src
      - ./scripts:/app/scripts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "celery", "-A", "src.celery_app", "inspect", "ping" ]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 60s

  # Optional: Redis Commander for Redis Management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: default-rate-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped

  # Optional: pgAdmin for PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: default-rate-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8080:80"
    depends_on:
      - postgres
    restart: unless-stopped
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:


networks:
  default:
    name: default-rate-network
